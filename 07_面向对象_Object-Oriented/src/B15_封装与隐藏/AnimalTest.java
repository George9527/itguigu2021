package B15_封装与隐藏;
/*
    面向对象的特征一：封装与隐藏
    一：问题的引入
        当我们创建一个类的对象后，我们可以通过“对象，属性”的方法，对对象的属性进行赋值，这里的赋值操作要受到
        属性的数据类型和存储范围的制约，但是除此之外，没有其他制约条件，但是，在实际问题中，我们往往需要给属性赋值
        加入额外的限制条件，这个条件就不能在属性声明时体现。我们只能通过方法进行限制条件的添加
        （比如：setLegs）
        同时，我们需要避免用户在使用“对象，属性”的方法对属性进行赋值，则需要将属性声明为私有的(private)
        此时，针对于属性就体现了封装型。

    二：封装型的体现：
        我们将类的属性xxx私有化(private),同时，提供公共的(public)方法来获取(getXxx)和设置此属性的值

    拓展：
        封装性的体现
            1.如上
            2.不对外暴露的私有方法
            3.单例模式

    三：封装性的体现，需要权限修饰符来配合
        1.Java规定的4种权限(从小到大)：private、缺省、protected、public
        2.4种权限可以用来修斯类及类的内部结构：属性、方法、构造器、内部类、
            修饰类的话，只能使用：缺省、public

    四：总结  Java提供了4种权限修饰符来修饰类及类的内部结构，体现类及类的内部机构在被调用时的可见性的大小

 */
public class AnimalTest {

    public static void main(String[] args) {
        Animal a = new Animal();
        a.name = "大黄";
//        a.age = 8;
//        a.legs = 4;
        a.setLegs(5);

        a.eat();
        a.show();
    }

}
